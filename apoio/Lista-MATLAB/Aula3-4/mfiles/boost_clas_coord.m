function [pos_tot,thres_tot,sleft_tot,a_tot,P_tot,K]=boost_clas_coord(X,y,T_max)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FUNCTION
%  [pos_tot,thres_tot,sleft_tot,a_tot,P_tot,K]=boost_clas_coord(X,y,T_max)
% Implements the Adaboost algorithm when the weak classifier is the "stump"
% classifier (implemented by the base_clas_coord function).
% Specifically, Adaboost, generates sequentially a series of weak
% classfiers. Each newly added classifier is trained on the data set at
% hand and gives more emphasis to the vectors that have been wrongly
% classified from the aggregate of weak classifiers created so far. The
% algorithm terminates when a newly added classfier gives classification
% error (on the training set) greater than or equal to 0.5 or when the
% maximum allowable number of weak classifiers has been achieved.
%
% INPUT ARGUMENTS:
%  X:       lxN matrix, each column of which is a feature
%           vector.
%  y:       N-dimensional vector, whose i-th coordinate is the class
%           label (+1 or -1) of the class where the i-th data vector
%           belongs.
%  T_max:   maximum allowable number of weak classifiers.
%
% OUTPUT ARGUMENTS:
%  pos_tot:     a vector whose i-th coordinate is the integer indicating
%               the chosen dimension for the i-th weak classfier.
%  thres_tot:   a vector whose i-th coordinate is the number indicating the
%               threshold on the chosen dimension for the i-th weak
%               classifier.
%  sleft_tot:   a vector whose i-th coordinate (that corresponds to the i-th
%               weak classifier) is a variable taking the values 1 (-1)
%               according to whether the data vectors whose pos_tot(i)
%               coordinates are less than thres_tot(i), are assigned to
%               class -1 (1).
%  a_tot:       a vector whose i-th coordinate is the weight for the
%               i-th weak classfier.
%  P_tot:       a vector whose i-th coordinate is the (weighted)
%               probability of classification error for the i-th weak
%               classifier.
%  K:           the number of weak classfiers generated by the algorithm.
%
% (c) 2010 S. Theodoridis, A. Pikrakis, K. Koutroumbas, D. Cavouras
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

[l,N]=size(X);
w=ones(1,N)/N; % Initialization of the weights of each data vector

a_tot=[];
P_tot=[];
pos_tot=[];
thres_tot=[];
sleft_tot=[];

for m=1:T_max
    % Creating the next weak classifier
    [pos,thres,a,sleft,P, y_est]=base_clas_coord(X,y,w);
    
    % Stopping condition
    if(P>0.5)|(P<0)
        K=m-1;
        break
    end
    
    % Accumulating the paramters of each weak classifier
    pos_tot=[pos_tot pos];
    thres_tot=[thres_tot thres];
    sleft_tot=[sleft_tot sleft];
    a_tot=[a_tot a];
    P_tot=[P_tot P];
    
    %Updating the weights
    Z=0;
    for i=1:N
        w(i)=w(i)*exp(-y(i)*a*y_est(i));
        Z=Z+w(i);
    end
    w=w/Z;
    K=m;
end