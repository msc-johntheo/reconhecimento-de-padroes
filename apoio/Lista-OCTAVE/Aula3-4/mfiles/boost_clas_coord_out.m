function [y_out,P_error]=boost_clas_coord_out(pos_tot,thres_tot,sleft_tot,a_tot,P_tot,K,X,y)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FUNCTION
%   [y_out,P_error]=boost_clas_coord_out(pos_tot,thres_tot,sleft_tot,a_tot,P_tot,K,X,y)
% Computes the output of a strong classifier (generated
% by the Adaboost algorithm) which consists of a series of "stump" weak
% classifiers (generated by the function "base_class_coord"), when it is
% applied on a given set of data vectors.
%
% INPUT ARGUMENTS:
%   pos_tot:   a vector whose i-th coordinate is the integer indicating
%              the chosen dimension for the i-th weak classfier.
%   thres_tot: a vector whose i-th coordinate is the number indicating the
%              threshold on the chosen dimension for the i-th weak
%              classifier.
%   sleft_tot: a vector whose i-th coordinate is a variable taking the
%              values 1 (-1) according to whether the range left to the
%              threshold is assigned to class -1 (1), in the i-th weak
%              classifier.
%   a_tot:     a vector whose i-th coordinate is the weight for the
%              i-th weak classfier.
%   P_tot:     a vector whose i-th coordinate is the (weighted)
%              probability of classification error for the i-th weak
%              classifier.
%   K:         the number of weak classfiers generated by the algorithm.
%   X:         lxN matrix, each column of which is a feature vector.
%   y:         N-dimensional vector, whose i-th coordinate is the label
%              (+1 or -1) of the class where the i-th data vector belongs.
%
% OUTPUT ARGUMENTS:
%   y_out:  N-dimensional vector whose i-th coordinate is the class
%           label (1 or -1) of the class where the i-th data vector has
%           been assigned by the classifier.
%   P_error:K-dimensional vector whose i-th coordinate gives the
%           classification error for the current data set, when only the
%           i-th first weak classifiers are taken into account.
%
% (c) 2010 S. Theodoridis, A. Pikrakis, K. Koutroumbas, D. Cavouras
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

[l,N]=size(X);
for m=1:K
    y_est(m,:)=base_clas_coord_out(X,y,pos_tot(m),thres_tot(m),sleft_tot(m));
    y_est(m,:)=a_tot(m)*y_est(m,:);
end
y_out=2*(sum(y_est)>0)-1;

for m=2:K
    out(m,:)=2*(sum(y_est(1:m,:))>0)-1;
    success(m)=sum(out(m,:).*y>0);
end

P_error=1-success/N;
